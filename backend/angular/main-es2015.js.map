{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/error/error.component.html","webpack:///./src/app/header/header.component.html","webpack:///./src/app/posts/post-create/post-create.component.html","webpack:///./src/app/posts/post-list/post-list.component.html","webpack:///./src/app/angular-material.module.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth-interceptor.ts","webpack:///./src/app/auth/auth.guard.ts","webpack:///./src/app/auth/auth.service.ts","webpack:///./src/app/error-interceptor.ts","webpack:///./src/app/error/error.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/posts/post-create/mime-type.validator.ts","webpack:///./src/app/posts/post-create/post-create.component.css","webpack:///./src/app/posts/post-create/post-create.component.ts","webpack:///./src/app/posts/post-list/post-list.component.css","webpack:///./src/app/posts/post-list/post-list.component.ts","webpack:///./src/app/posts/post.module.ts","webpack:///./src/app/posts/posts.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["var map = {\n\t\"./auth/auth.module\": [\n\t\t\"./src/app/auth/auth.module.ts\",\n\t\t\"auth-auth-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","module.exports = \"<app-header></app-header>\\n<main>\\n  <router-outlet></router-outlet>\\n</main>\\n\"","module.exports = \"<h1 mat-dialog-title>An Error Occured!</h1>\\r\\n<div mat-dialog-content>\\r\\n  <p class=\\\"mat-body-1\\\">{{ data.message }}</p>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n  <button mat-button mat-dialog-close>Okay</button>\\r\\n</div>\\r\\n\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n  <span><a routerLink=\\\"/\\\">My Messages</a></span>\\r\\n  <span class=\\\"spacer\\\"></span>\\r\\n  <ul>\\r\\n    <li *ngIf=\\\"userIsAuthenticated\\\">\\r\\n      <a mat-button routerLink=\\\"/create\\\" routerLinkActive=\\\"mat-accent\\\">New Post</a>\\r\\n    </li>\\r\\n    <li *ngIf=\\\"!userIsAuthenticated\\\">\\r\\n      <a mat-button routerLink=\\\"/auth/login\\\" routerLinkActive=\\\"mat-accent\\\">Login</a>\\r\\n    </li>\\r\\n    <li *ngIf=\\\"!userIsAuthenticated\\\">\\r\\n      <a mat-button routerLink=\\\"/auth/signup\\\" routerLinkActive=\\\"mat-accent\\\">Signup</a>\\r\\n    </li>\\r\\n    <li *ngIf=\\\"userIsAuthenticated\\\">\\r\\n      <button mat-button (click)=\\\"onLogout()\\\">Logout</button>\\r\\n    </li>\\r\\n  </ul>\\r\\n</mat-toolbar>\\r\\n\"","module.exports = \"<mat-card>\\r\\n  <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\r\\n  <form [formGroup]=\\\"form\\\" (submit)=\\\"onSavePost()\\\" *ngIf=\\\"!isLoading\\\">\\r\\n    <mat-form-field>\\r\\n      <input matInput type=\\\"text\\\" formControlName=\\\"title\\\" placeholder=\\\"Candidate's name\\\">\\r\\n      <mat-error *ngIf=\\\"form.get('title').invalid\\\">Please enter candidate's name.</mat-error>\\r\\n    </mat-form-field>\\r\\n    <div>\\r\\n      <button mat-stroked-button type=\\\"button\\\" (click)=\\\"filePicker.click()\\\">Pick photo</button>\\r\\n      &nbsp;<small>{{ filename }}</small>\\r\\n      <input type=\\\"file\\\" #filePicker (change)=\\\"onImagePicked($event)\\\">\\r\\n    </div>\\r\\n    <div class=\\\"image-preview\\\" *ngIf=\\\"imagePreview && imagePreview !== '' && form.get('image').valid\\\">\\r\\n      <img [src]=\\\"imagePreview\\\" [alt]=\\\"form.value.title\\\">\\r\\n    </div>\\r\\n    <mat-form-field>\\r\\n      <textarea matInput rows=\\\"4\\\" formControlName=\\\"content\\\" placeholder=\\\"About this candidate\\\"></textarea>\\r\\n      <mat-error *ngIf=\\\"form.get('content').invalid\\\">Please enter his/her summary.</mat-error>\\r\\n    </mat-form-field>\\r\\n    <button color=\\\"primary\\\" mat-raised-button type=\\\"submit\\\">Save Entry</button>\\r\\n  </form>\\r\\n</mat-card>\\r\\n\"","module.exports = \"<mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\r\\n<mat-accordion multi=\\\"true\\\" *ngIf=\\\"posts.length > 0 && !isLoading\\\">\\r\\n  <mat-expansion-panel *ngFor=\\\"let post of posts\\\">\\r\\n    <mat-expansion-panel-header>\\r\\n      {{ post.title }}\\r\\n    </mat-expansion-panel-header>\\r\\n    <div class=\\\"post-image\\\">\\r\\n      <img [src]=\\\"post.imagePath\\\" [alt]=\\\"post.title\\\">\\r\\n    </div>\\r\\n    <p>{{ post.content }}</p>\\r\\n    <mat-action-row *ngIf=\\\"userIsAuthenticated && userId === post.creator\\\">\\r\\n      <a mat-button color=\\\"accent\\\" [routerLink]=\\\"['/edit', post.id]\\\">EDIT</a>\\r\\n      <button mat-button color=\\\"warn\\\" (click)=\\\"onDelete(post.id)\\\">DELETE</button>\\r\\n    </mat-action-row>\\r\\n  </mat-expansion-panel>\\r\\n</mat-accordion>\\r\\n<mat-paginator [length]=\\\"totalPosts\\\" [pageSize]=\\\"postsPerPage\\\" [pageSizeOptions]=\\\"pageSizeOptions\\\"\\r\\n  *ngIf=\\\"posts.length > 0\\\" (page)=\\\"onChangedPage($event)\\\"></mat-paginator>\\r\\n<p class=\\\"info-text mat-body-1\\\" *ngIf=\\\"posts.length <= 0 && !isLoading\\\">No posts added yet!</p>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport {\r\n  MatInputModule,\r\n  MatCardModule,\r\n  MatButtonModule,\r\n  MatToolbarModule,\r\n  MatExpansionModule,\r\n  MatProgressSpinnerModule,\r\n  MatPaginatorModule,\r\n  MatDialogModule\r\n} from '@angular/material';\r\n\r\n@NgModule({\r\n  exports: [\r\n    MatInputModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    MatExpansionModule,\r\n    MatProgressSpinnerModule,\r\n    MatPaginatorModule,\r\n    MatDialogModule\r\n  ]\r\n})\r\nexport class AngularMaterialModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { PostListComponent } from './posts/post-list/post-list.component';\r\nimport { PostCreateComponent } from './posts/post-create/post-create.component';\r\n\r\nimport { AuthGuard } from './auth/auth.guard';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: PostListComponent, canActivate: [AuthGuard] },\r\n  { path: 'create', component: PostCreateComponent, canActivate: [AuthGuard] },\r\n  {\r\n    path: 'edit/:postId',\r\n    component: PostCreateComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  { path: 'auth', loadChildren: './auth/auth.module#AuthModule' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n  providers: [AuthGuard]\r\n})\r\nexport class AppRoutingModule {}\r\n","module.exports = \"main {\\r\\n  width: 80%;\\r\\n  margin: 1rem auto;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxVQUFVO0VBQ1YsaUJBQWlCO0FBQ25CIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYWluIHtcclxuICB3aWR0aDogODAlO1xyXG4gIG1hcmdpbjogMXJlbSBhdXRvO1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './auth/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  constructor(private authService: AuthService) {}\n  ngOnInit() {\n    this.authService.autoAuthUser();\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AngularMaterialModule } from './angular-material.module';\nimport { PostsModule } from './posts/post.module';\n\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { ErrorComponent } from './error/error.component';\n\nimport { AuthInterceptor } from './auth/auth-interceptor';\nimport { ErrorInterceptor } from './error-interceptor';\n\n@NgModule({\n  declarations: [AppComponent, HeaderComponent, ErrorComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    AngularMaterialModule,\n    PostsModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent],\n  entryComponents: [ErrorComponent]\n})\nexport class AppModule {}\n","import {\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n  HttpHandler\r\n} from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor(private authService: AuthService) {}\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    const authToken = this.authService.getToken();\r\n    const authRequest = req.clone({\r\n      headers: req.headers.set('Authorization', `Bearer ${authToken}`)\r\n    });\r\n    return next.handle(authRequest);\r\n  }\r\n}\r\n","import {\r\n  CanActivate,\r\n  UrlTree,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  Router\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ):\r\n    | boolean\r\n    | UrlTree\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree> {\r\n    const isAuth = this.authService.isAuth();\r\n    if (!isAuth) {\r\n      this.router.navigate(['/auth/login']);\r\n    }\r\n    return isAuth;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Subject } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { environment } from '../../environments/environment';\r\nimport { AuthData } from './auth-data.model';\r\n\r\nconst BACKEND_URL = environment.apiUrl + '/user';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthService {\r\n  private isAuthenticated = false;\r\n  private token: string;\r\n  private tokenTimer: any;\r\n  private userId: string;\r\n  private authStatusListener = new Subject<boolean>();\r\n\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n\r\n  getToken() {\r\n    return this.token;\r\n  }\r\n\r\n  getUserId() {\r\n    return this.userId;\r\n  }\r\n\r\n  isAuth() {\r\n    return this.isAuthenticated;\r\n  }\r\n\r\n  getAuthStatusListener() {\r\n    return this.authStatusListener.asObservable();\r\n  }\r\n\r\n  createUser(email: string, password: string) {\r\n    const authData: AuthData = { email, password };\r\n    return this.http.post(BACKEND_URL + '/signup', authData).subscribe(\r\n      () => {\r\n        // tslint:disable-next-line: no-unused-expression\r\n        this.router.navigate['/'];\r\n      },\r\n      error => {\r\n        this.authStatusListener.next(false);\r\n      }\r\n    );\r\n  }\r\n\r\n  login(email: string, password: string) {\r\n    const authData: AuthData = {\r\n      email,\r\n      password\r\n    };\r\n    this.http\r\n      .post<{ token: string; expiresIn: number; userId: string }>(\r\n        BACKEND_URL + '/login',\r\n        authData\r\n      )\r\n      .subscribe(\r\n        response => {\r\n          const token = response.token;\r\n          if (token) {\r\n            const expiresInDuration = response.expiresIn;\r\n            this.setAuthTimer(expiresInDuration);\r\n            this.token = token;\r\n            this.isAuthenticated = true;\r\n            this.userId = response.userId;\r\n            this.authStatusListener.next(true);\r\n            const now = new Date();\r\n            const expirationDate = new Date(\r\n              now.getTime() + expiresInDuration * 1000\r\n            );\r\n            this.saveAuthData(token, expirationDate, this.userId);\r\n            this.router.navigate(['/']);\r\n          }\r\n        },\r\n        error => {\r\n          this.authStatusListener.next(false);\r\n        }\r\n      );\r\n  }\r\n\r\n  autoAuthUser() {\r\n    const authInformation = this.getAuthData();\r\n    if (!authInformation) {\r\n      return;\r\n    }\r\n    const now = new Date();\r\n    const expiresIn = authInformation.expirationDate.getTime() - now.getTime();\r\n    if (expiresIn > 0) {\r\n      this.token = authInformation.token;\r\n      this.isAuthenticated = true;\r\n      this.userId = authInformation.userId;\r\n      this.setAuthTimer(expiresIn / 1000);\r\n      this.authStatusListener.next(true);\r\n    }\r\n  }\r\n\r\n  logout() {\r\n    this.token = null;\r\n    this.isAuthenticated = false;\r\n    this.authStatusListener.next(false);\r\n    clearTimeout(this.tokenTimer);\r\n    this.userId = null;\r\n    this.clearAuthData();\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  private setAuthTimer(duration: number) {\r\n    this.tokenTimer = setTimeout(() => {\r\n      this.logout();\r\n    }, duration * 1000);\r\n  }\r\n\r\n  private saveAuthData(token: string, expirationDate: Date, userId: string) {\r\n    localStorage.setItem('token', token);\r\n    localStorage.setItem('expiration', expirationDate.toISOString());\r\n    localStorage.setItem('userId', userId);\r\n  }\r\n\r\n  private clearAuthData() {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expiration');\r\n    localStorage.removeItem('userId');\r\n  }\r\n\r\n  private getAuthData() {\r\n    const token = localStorage.getItem('token');\r\n    const expirationDate = localStorage.getItem('expiration');\r\n    const userId = localStorage.getItem('userId');\r\n    if (!token || !expirationDate || !userId) {\r\n      return;\r\n    }\r\n    return {\r\n      token,\r\n      expirationDate: new Date(expirationDate),\r\n      userId\r\n    };\r\n  }\r\n}\r\n","import {\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpErrorResponse\r\n} from '@angular/common/http';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { throwError } from 'rxjs';\r\nimport { MatDialog } from '@angular/material';\r\nimport { Injectable } from '@angular/core';\r\nimport { ErrorComponent } from './error/error.component';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n  constructor(public dialog: MatDialog) {}\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    return next.handle(req).pipe(\r\n      catchError((error: HttpErrorResponse) => {\r\n        let errorMessage = 'An unknown error occurred!';\r\n        if (error.error.message) {\r\n          errorMessage = error.error.message;\r\n        }\r\n        this.dialog.open(ErrorComponent, { data: { message: errorMessage } });\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material';\r\n\r\n@Component({\r\n  templateUrl: './error.component.html'\r\n})\r\nexport class ErrorComponent {\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: { message: string }) {}\r\n}\r\n","module.exports = \"a {\\r\\n  text-decoration: none;\\r\\n  color: #fff;\\r\\n}\\r\\n\\r\\nul {\\r\\n  list-style: none;\\r\\n  padding: 0;\\r\\n  margin: 0;\\r\\n  display: flex;\\r\\n}\\r\\n\\r\\n.spacer {\\r\\n  flex: 1 1 auto;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UscUJBQXFCO0VBQ3JCLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQixVQUFVO0VBQ1YsU0FBUztFQUNULGFBQWE7QUFDZjs7QUFFQTtFQUNFLGNBQWM7QUFDaEIiLCJmaWxlIjoic3JjL2FwcC9oZWFkZXIvaGVhZGVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJhIHtcclxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgY29sb3I6ICNmZmY7XHJcbn1cclxuXHJcbnVsIHtcclxuICBsaXN0LXN0eWxlOiBub25lO1xyXG4gIHBhZGRpbmc6IDA7XHJcbiAgbWFyZ2luOiAwO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbn1cclxuXHJcbi5zcGFjZXIge1xyXG4gIGZsZXg6IDEgMSBhdXRvO1xyXG59XHJcbiJdfQ== */\"","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit, OnDestroy {\r\n  userIsAuthenticated = false;\r\n  private authListenerSubs: Subscription;\r\n\r\n  constructor(private authService: AuthService) {}\r\n\r\n  ngOnInit() {\r\n    this.userIsAuthenticated = this.authService.isAuth();\r\n    this.authListenerSubs = this.authService\r\n      .getAuthStatusListener()\r\n      .subscribe(isAuthenticated => {\r\n        this.userIsAuthenticated = isAuthenticated;\r\n      });\r\n  }\r\n\r\n  onLogout() {\r\n    this.authService.logout();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.authListenerSubs.unsubscribe();\r\n  }\r\n}\r\n","import { AbstractControl } from '@angular/forms';\r\nimport { Observable, Observer, of } from 'rxjs';\r\n\r\nexport const mimeType = (\r\n  control: AbstractControl\r\n): Promise<{ [key: string]: any }> | Observable<{ [key: string]: any }> => {\r\n  if (typeof control.value === 'string') {\r\n    return of(null);\r\n  }\r\n  const file = control.value as File;\r\n  const fileReader = new FileReader();\r\n  const frObs = new Observable((observer: Observer<{ [key: string]: any }>) => {\r\n    fileReader.addEventListener('loadend', () => {\r\n      const arr = new Uint8Array(fileReader.result as ArrayBuffer).subarray(\r\n        0,\r\n        4\r\n      );\r\n      let header = '';\r\n      let isValid = false;\r\n      // tslint:disable-next-line: prefer-for-of\r\n      for (let i = 0; i < arr.length; i++) {\r\n        header += arr[i].toString(16);\r\n      }\r\n      switch (header) {\r\n        case '89504e47':\r\n          isValid = true;\r\n          break;\r\n        case 'ffd8ffe0':\r\n        case 'ffd8ffe1':\r\n        case 'ffd8ffe2':\r\n        case 'ffd8ffe3':\r\n        case 'ffd8ffe8':\r\n          isValid = true;\r\n          break;\r\n        default:\r\n          isValid = false; // Or you can use the blob.type as fallback\r\n          break;\r\n      }\r\n      if (isValid) {\r\n        observer.next(null);\r\n      } else {\r\n        observer.next({ invalidMimeType: true });\r\n      }\r\n      observer.complete();\r\n    });\r\n    fileReader.readAsArrayBuffer(file);\r\n  });\r\n  return frObs;\r\n};\r\n","module.exports = \"mat-form-field,\\r\\ntextarea {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\nmat-spinner {\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\ninput[type=\\\"file\\\"] {\\r\\n  visibility: hidden;\\r\\n}\\r\\n\\r\\n.image-preview {\\r\\n  height: 5rem;\\r\\n  margin: 1rem 0;\\r\\n}\\r\\n\\r\\n.image-preview img {\\r\\n  height: 100%;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcG9zdHMvcG9zdC1jcmVhdGUvcG9zdC1jcmVhdGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7RUFFRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxZQUFZO0VBQ1osY0FBYztBQUNoQjs7QUFFQTtFQUNFLFlBQVk7QUFDZCIsImZpbGUiOiJzcmMvYXBwL3Bvc3RzL3Bvc3QtY3JlYXRlL3Bvc3QtY3JlYXRlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtZm9ybS1maWVsZCxcclxudGV4dGFyZWEge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG5tYXQtc3Bpbm5lciB7XHJcbiAgbWFyZ2luOiBhdXRvO1xyXG59XHJcblxyXG5pbnB1dFt0eXBlPVwiZmlsZVwiXSB7XHJcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xyXG59XHJcblxyXG4uaW1hZ2UtcHJldmlldyB7XHJcbiAgaGVpZ2h0OiA1cmVtO1xyXG4gIG1hcmdpbjogMXJlbSAwO1xyXG59XHJcblxyXG4uaW1hZ2UtcHJldmlldyBpbWcge1xyXG4gIGhlaWdodDogMTAwJTtcclxufVxyXG4iXX0= */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { PostsService } from '../posts.service';\r\nimport { ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { Post } from '../post.model';\r\nimport { mimeType } from './mime-type.validator';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-post-create',\r\n  templateUrl: './post-create.component.html',\r\n  styleUrls: ['./post-create.component.css']\r\n})\r\nexport class PostCreateComponent implements OnInit, OnDestroy {\r\n  private mode = 'create';\r\n  private postId: string;\r\n  private authStatusSub: Subscription;\r\n  post: Post;\r\n  isLoading = false;\r\n  form: FormGroup;\r\n  imagePreview: string;\r\n  filename: string;\r\n\r\n  constructor(\r\n    public postsService: PostsService,\r\n    public route: ActivatedRoute,\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.authStatusSub = this.authService\r\n      .getAuthStatusListener()\r\n      .subscribe(authStatus => {\r\n        this.isLoading = false;\r\n      });\r\n    this.form = new FormGroup({\r\n      title: new FormControl(null, {\r\n        validators: [Validators.required, Validators.minLength(3)]\r\n      }),\r\n      content: new FormControl(null, {\r\n        validators: [Validators.required]\r\n      }),\r\n      image: new FormControl(null, {\r\n        validators: [Validators.required],\r\n        asyncValidators: [mimeType]\r\n      })\r\n    });\r\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\r\n      if (paramMap.has('postId')) {\r\n        this.mode = 'edit';\r\n        this.postId = paramMap.get('postId');\r\n        this.isLoading = true;\r\n        this.postsService.getPost(this.postId).subscribe(postData => {\r\n          this.isLoading = false;\r\n          this.post = {\r\n            id: postData._id,\r\n            title: postData.title,\r\n            content: postData.content,\r\n            imagePath: postData.imagePath,\r\n            creator: postData.creator\r\n          };\r\n          this.form.setValue({\r\n            title: this.post.title,\r\n            content: this.post.content,\r\n            image: this.post.imagePath\r\n          });\r\n          this.imagePreview = this.post.imagePath;\r\n        });\r\n      } else {\r\n        this.mode = 'create';\r\n        this.postId = null;\r\n      }\r\n    });\r\n  }\r\n\r\n  onSavePost() {\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n    this.isLoading = true;\r\n    if (this.mode === 'create') {\r\n      this.postsService.addPost(\r\n        this.form.value.title,\r\n        this.form.value.content,\r\n        this.form.value.image\r\n      );\r\n    } else {\r\n      this.postsService.updatePost(\r\n        this.postId,\r\n        this.form.value.title,\r\n        this.form.value.content,\r\n        this.form.value.image\r\n      );\r\n    }\r\n\r\n    this.form.reset();\r\n  }\r\n\r\n  onImagePicked(event: Event) {\r\n    const file = (event.target as HTMLInputElement).files[0];\r\n    this.form.patchValue({ image: file });\r\n    this.form.get('image').updateValueAndValidity();\r\n\r\n    // if (this.form.get('image').valid) {\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      this.imagePreview = reader.result as string;\r\n    };\r\n    // if (file.type === 'application/pdf' || file.type === 'application/msword') {\r\n    //   this.filename = file.name;;\r\n    // } else {\r\n    reader.readAsDataURL(file);\r\n    // }\r\n    // }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.authStatusSub.unsubscribe();\r\n  }\r\n}\r\n","module.exports = \":host {\\r\\n  display: block;\\r\\n  margin-top: 1rem;\\r\\n}\\r\\n\\r\\n.info-text {\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\nmat-spinner {\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n.post-image {\\r\\n  width: 100%\\r\\n}\\r\\n\\r\\n.post-image img {\\r\\n  width: 100%;\\r\\n  box-shadow: 1px 1px 1px rgba(0, 0, 0, .5);\\r\\n}\\r\\n\\r\\nmat-paginator {\\r\\n  margin-top: 1rem;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcG9zdHMvcG9zdC1saXN0L3Bvc3QtbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsY0FBYztFQUNkLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFO0FBQ0Y7O0FBRUE7RUFDRSxXQUFXO0VBQ1gseUNBQXlDO0FBQzNDOztBQUVBO0VBQ0UsZ0JBQWdCO0FBQ2xCIiwiZmlsZSI6InNyYy9hcHAvcG9zdHMvcG9zdC1saXN0L3Bvc3QtbGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIG1hcmdpbi10b3A6IDFyZW07XHJcbn1cclxuXHJcbi5pbmZvLXRleHQge1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxubWF0LXNwaW5uZXIge1xyXG4gIG1hcmdpbjogYXV0bztcclxufVxyXG5cclxuLnBvc3QtaW1hZ2Uge1xyXG4gIHdpZHRoOiAxMDAlXHJcbn1cclxuXHJcbi5wb3N0LWltYWdlIGltZyB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgYm94LXNoYWRvdzogMXB4IDFweCAxcHggcmdiYSgwLCAwLCAwLCAuNSk7XHJcbn1cclxuXHJcbm1hdC1wYWdpbmF0b3Ige1xyXG4gIG1hcmdpbi10b3A6IDFyZW07XHJcbn1cclxuIl19 */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { Post } from '../post.model';\r\nimport { PostsService } from '../posts.service';\r\nimport { PageEvent } from '@angular/material';\r\nimport { AuthService } from 'src/app/auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-post-list',\r\n  templateUrl: './post-list.component.html',\r\n  styleUrls: ['./post-list.component.css']\r\n})\r\nexport class PostListComponent implements OnInit, OnDestroy {\r\n  posts: Post[] = [];\r\n  isLoading = false;\r\n  totalPosts = 0;\r\n  postsPerPage = 2;\r\n  currentPage = 1;\r\n  pageSizeOptions = [5, 10, 20, 30];\r\n  userIsAuthenticated = false;\r\n  userId: string;\r\n  private postsSub: Subscription;\r\n  private authStatusSub: Subscription;\r\n\r\n  constructor(\r\n    public postsService: PostsService,\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.isLoading = true;\r\n    this.postsService.getPosts(this.postsPerPage, this.currentPage);\r\n    this.userId = this.authService.getUserId();\r\n    this.postsSub = this.postsService\r\n      .getPostUpdateListener()\r\n      .subscribe((postData: { posts: Post[]; postCount: number }) => {\r\n        this.isLoading = false;\r\n        this.posts = postData.posts;\r\n        this.totalPosts = postData.postCount;\r\n      });\r\n    this.userIsAuthenticated = this.authService.isAuth();\r\n    this.authStatusSub = this.authService\r\n      .getAuthStatusListener()\r\n      .subscribe(isAuthenticated => {\r\n        this.userIsAuthenticated = isAuthenticated;\r\n        this.userId = this.authService.getUserId();\r\n      });\r\n  }\r\n\r\n  onDelete(postId: string) {\r\n    this.isLoading = true;\r\n    this.postsService.deletePost(postId).subscribe(\r\n      () => {\r\n        this.postsService.getPosts(this.postsPerPage, this.currentPage);\r\n      },\r\n      error => {\r\n        this.isLoading = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  onChangedPage(pageData: PageEvent) {\r\n    this.isLoading = true;\r\n    this.currentPage = pageData.pageIndex + 1;\r\n    this.postsPerPage = pageData.pageSize;\r\n    this.postsService.getPosts(this.postsPerPage, this.currentPage);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.postsSub.unsubscribe();\r\n    this.authStatusSub.unsubscribe();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { PostCreateComponent } from './post-create/post-create.component';\r\nimport { PostListComponent } from './post-list/post-list.component';\r\nimport { AngularMaterialModule } from '../angular-material.module';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n@NgModule({\r\n  declarations: [PostCreateComponent, PostListComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n    RouterModule\r\n  ]\r\n})\r\nexport class PostsModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { environment } from '../../environments/environment';\r\nimport { Post } from './post.model';\r\n\r\nconst BACKEND_URL = environment.apiUrl + '/posts';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class PostsService {\r\n  private posts: Post[] = [];\r\n  private postsUpdated = new Subject<{ posts: Post[]; postCount: number }>(); // Post[] payload\r\n\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n\r\n  getPosts(postsPerPage: number, currentPage: number) {\r\n    const queryParams = `?pagesize=${postsPerPage}&page=${currentPage}`;\r\n    this.http\r\n      .get<{ message: string; posts: any; maxPosts: number }>(\r\n        BACKEND_URL + queryParams\r\n      )\r\n      .pipe(\r\n        map(postData => {\r\n          return {\r\n            posts: postData.posts.map(post => {\r\n              return {\r\n                title: post.title,\r\n                content: post.content,\r\n                id: post._id,\r\n                imagePath: post.imagePath,\r\n                creator: post.creator\r\n              };\r\n            }),\r\n            maxPosts: postData.maxPosts\r\n          };\r\n        })\r\n      )\r\n      .subscribe(transformedPostData => {\r\n        this.posts = transformedPostData.posts;\r\n        this.postsUpdated.next({\r\n          posts: [...this.posts],\r\n          postCount: transformedPostData.maxPosts\r\n        });\r\n      });\r\n  }\r\n\r\n  getPostUpdateListener() {\r\n    return this.postsUpdated.asObservable();\r\n  }\r\n\r\n  getPost(id: string) {\r\n    return this.http.get<{\r\n      _id: string;\r\n      title: string;\r\n      content: string;\r\n      imagePath: string;\r\n      creator: string;\r\n    }>(BACKEND_URL + '/' + id);\r\n  }\r\n\r\n  addPost(title: string, content: string, image: File) {\r\n    const postData = new FormData();\r\n    postData.append('title', title);\r\n    postData.append('content', content);\r\n    postData.append('image', image, title);\r\n    this.http\r\n      .post<{ message: string; post: Post }>(BACKEND_URL, postData)\r\n      .subscribe(responseData => {\r\n        this.router.navigate(['/']);\r\n      });\r\n  }\r\n\r\n  updatePost(id: string, title: string, content: string, image: File | string) {\r\n    let postData: Post | FormData;\r\n    if (typeof image === 'object') {\r\n      postData = new FormData();\r\n      postData.append('id', id);\r\n      postData.append('title', title);\r\n      postData.append('content', content);\r\n      postData.append('image', image, title);\r\n    } else {\r\n      postData = { id, title, content, imagePath: image, creator: null };\r\n    }\r\n\r\n    this.http.put(BACKEND_URL + '/' + id, postData).subscribe(response => {\r\n      this.router.navigate(['/']);\r\n    });\r\n  }\r\n\r\n  deletePost(postId: string) {\r\n    return this.http.delete(BACKEND_URL + '/' + postId);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:3000/api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}